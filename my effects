using System;
using System.Collections;
using UnityEngine;
using UnboundLib.GameModes;
using ModdingUtils.Extensions;

public class ChristianEffect : MonoBehaviour
{
    private Player player;
    private CharacterData data;
    private Gun gun;

    private Vector3 originalScale;
    private float originalProjectileSize;
    private float originalHealth;

    private float bulletSizeBoost = 2f; // Increased to 2 each block
    private float healthBoost = 2f;     // Increased to 2 each block
    private float sizeBoost = 0.1f;     // Player gets slightly bigger each block

    private IEnumerator Start()
    {
        // Wait until player is properly assigned
        while (player == null)
        {
            player = GetComponentInParent<Player>();
            if (player != null)
            {
                data = player.data;
                gun = data?.weaponHandler?.gun;
            }
            yield return null;
        }

        originalScale = player.transform.localScale;
        if (gun != null)
        {
            originalProjectileSize = gun.projectileSize;
        }

        if (data != null)
        {
            originalHealth = data.maxHealth;
        }

        Block block = GetComponent<Block>();
        if (block != null)
        {
            block.BlockAction += ApplyBoost;
        }

        if (data?.healthHandler != null)
        {
            data.healthHandler.reviveAction += ResetStats;
        }

        GameModeManager.AddHook(GameModeHooks.HookRoundEnd, OnRoundEnd);
    }

    private void OnDisable()
    {
        Block block = GetComponent<Block>();
        if (block != null)
        {
            block.BlockAction -= ApplyBoost;
        }

        if (data?.healthHandler != null)
        {
            data.healthHandler.reviveAction -= ResetStats;
        }

        GameModeManager.RemoveHook(GameModeHooks.HookRoundEnd, OnRoundEnd);
    }

    private void ApplyBoost(BlockTrigger.BlockTriggerType trigger)
    {
        Debug.Log("ApplyBoost triggered");

        if (player == null)
        {
            Debug.LogError("ApplyBoost: player is null");
            return;
        }
        if (data == null)
        {
            Debug.LogError("ApplyBoost: data is null");
            return;
        }
        if (gun == null)
        {
            Debug.LogError("ApplyBoost: gun is null");
            return;
        }

        gun.projectileSize += bulletSizeBoost;
        data.maxHealth += healthBoost;
        data.health += healthBoost;
        player.transform.localScale += Vector3.one * sizeBoost;
    }

    private void ResetStats()
    {
        if (player == null || data == null || gun == null) return;

        gun.projectileSize = originalProjectileSize;
        data.maxHealth = originalHealth;
        data.health = originalHealth;
        player.transform.localScale = originalScale;
    }

    private IEnumerator OnRoundEnd(IGameModeHandler gm)
    {
        ResetStats();
        yield break;
    }
}
